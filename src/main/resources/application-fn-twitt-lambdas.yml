spring:
  application:
    name: "twitt"
  cloud.stream:
    function:
      definition: convertPostCdcToPostMessage;commentUserJoiner;materializeEnrichedComment;joinPost;

    bindings:
      # Post Transformer
      convertPostCdcToPostMessage-in-0:
        destination: post-created
      convertPostCdcToPostMessage-out-0:
        destination: post-transformed
      # Post Joiner
      joinPost-in-0:
        destination: post-transformed
      # Comment User Joiner
      commentUserJoiner-in-0:
        destination: comment-created
      commentUserJoiner-in-1:
        destination: user-updated
      commentUserJoiner-out-0:
        destination: comment-user-joined
      # Joined Comment Materialize
      materializeEnrichedComment-in-0:
        destination: comment-user-joined

    kafka:
      streams:
        bindings:
          commentUserJoiner-in-0:
            consumer:
              start-offset: earliest
              materialized-as: comment-user-state-store
          convertPostCdcToPostMessage-in-0:
            consumer:
              start-offset: earliest
          joinPost-in-0:
            consumer:
              start-offset: earliest
              materialized-as: joined-post-state-store

        binder:
          functions:
            convertPostCdcToPostMessage:
              application-id: "convertPostCdcToPostMessage"
            joinPost:
              application-id: "joinPost"
            commentUserJoiner:
              application-id: "commentUserJoiner"
            materializeEnrichedComment:
              application-id: "materializeEnrichedComment"
          brokers: localhost:9092
          configuration:
            processing:
              guarantee: exactly_once
            max.poll.records: 10
            max.poll.interval.ms: 10000

